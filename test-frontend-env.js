// Teste das vari√°veis de ambiente no frontend
import dotenv from 'dotenv';

// Carregar vari√°veis do .env
dotenv.config();

console.log('üîç Testando vari√°veis de ambiente...');
console.log('');

// Testar vari√°veis do Supabase
console.log('üìã VARI√ÅVEIS DO SUPABASE:');
console.log('VITE_SUPABASE_URL:', process.env.VITE_SUPABASE_URL || 'N√ÉO DEFINIDA');
console.log('VITE_SUPABASE_ANON_KEY:', process.env.VITE_SUPABASE_ANON_KEY ? 'DEFINIDA' : 'N√ÉO DEFINIDA');
console.log('');

// Testar outras vari√°veis importantes
console.log('üìã OUTRAS VARI√ÅVEIS:');
console.log('VITE_STRIPE_PUBLISHABLE_KEY:', process.env.VITE_STRIPE_PUBLISHABLE_KEY ? 'DEFINIDA' : 'N√ÉO DEFINIDA');
console.log('RESEND_API_KEY:', process.env.RESEND_API_KEY ? 'DEFINIDA' : 'N√ÉO DEFINIDA');
console.log('');

// Testar conectividade b√°sica com Supabase
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;

if (supabaseUrl && supabaseKey) {
  console.log('üß™ Testando conectividade com Supabase...');
  
  const supabase = createClient(supabaseUrl, supabaseKey);
  
  try {
    // Teste simples de conectividade
    const { data, error } = await supabase.from('user_profiles').select('count').limit(1);
    
    if (error) {
      console.log('‚ùå Erro na conectividade:', error.message);
    } else {
      console.log('‚úÖ Conectividade com Supabase OK');
    }
  } catch (err) {
    console.log('‚ùå Erro ao testar conectividade:', err.message);
  }
} else {
  console.log('‚ùå N√£o foi poss√≠vel testar conectividade - vari√°veis ausentes');
}

console.log('');
console.log('üîß Se houver problemas:');
console.log('1. Verifique se as vari√°veis est√£o no arquivo .env');
console.log('2. Reinicie o servidor de desenvolvimento');
console.log('3. Verifique se as URLs est√£o corretas');