import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.log('‚ùå Vari√°veis do Supabase n√£o encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

console.log('üß™ Teste de Signup com Email Autorizado');
console.log('==================================================');
console.log(`üîó Supabase URL: ${supabaseUrl}`);
console.log(`üîë Anon Key: ${supabaseKey.substring(0, 20)}...`);

async function testSignupWithAuthorizedEmail() {
  try {
    // Email autorizado pelo Resend
    const testEmail = 'gamepathai@gmail.com';
    const testPassword = 'TestPassword123!';
    
    console.log(`\nüìß Testando signup com: ${testEmail}`);
    console.log('üîÑ Iniciando processo de cadastro...');
    
    // Tentar fazer signup
    const { data, error } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        data: {
          full_name: 'Teste Autorizado',
          subscription_status: 'pending_email'
        }
      }
    });
    
    if (error) {
      console.log('‚ùå Erro no signup:', error.message);
      
      if (error.message.includes('already registered')) {
        console.log('\n‚ö†Ô∏è  Email j√° cadastrado. Testando login...');
        
        const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
          email: testEmail,
          password: testPassword
        });
        
        if (loginError) {
          console.log('‚ùå Erro no login:', loginError.message);
          return;
        }
        
        console.log('‚úÖ Login realizado com sucesso!');
        console.log(`üë§ Usu√°rio: ${loginData.user?.email}`);
        console.log(`üÜî ID: ${loginData.user?.id}`);
        console.log(`üìß Email confirmado: ${loginData.user?.email_confirmed_at ? 'SIM' : 'N√ÉO'}`);
        
        return;
      }
      
      return;
    }
    
    console.log('‚úÖ Signup realizado com sucesso!');
    console.log(`üë§ Usu√°rio criado: ${data.user?.email}`);
    console.log(`üÜî ID: ${data.user?.id}`);
    console.log(`üìß Email confirmado: ${data.user?.email_confirmed_at ? 'SIM' : 'N√ÉO'}`);
    
    if (data.user && !data.user.email_confirmed_at) {
      console.log('\nüì® Email de confirma√ß√£o deve ter sido enviado!');
      console.log('üìß Verificar caixa de entrada: gamepathai@gmail.com');
      console.log('\nüîç Verificando logs da fun√ß√£o send-confirmation-email...');
      
      // Aguardar um pouco para o email ser processado
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      // Testar a fun√ß√£o de envio de email diretamente
      console.log('\nüß™ Testando fun√ß√£o send-confirmation-email diretamente...');
      
      try {
        const response = await fetch(`${supabaseUrl}/functions/v1/send-confirmation-email`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${supabaseKey}`
          },
          body: JSON.stringify({
            email: testEmail,
            userId: data.user.id
          })
        });
        
        const result = await response.text();
        console.log(`üìä Status da fun√ß√£o: ${response.status}`);
        console.log(`üìã Resposta:`, result);
        
        if (response.ok) {
          console.log('‚úÖ Fun√ß√£o de email executada com sucesso!');
        } else {
          console.log('‚ö†Ô∏è  Fun√ß√£o executada mas com restri√ß√µes (esperado para dom√≠nio n√£o verificado)');
        }
        
      } catch (funcError) {
        console.log('‚ùå Erro ao testar fun√ß√£o:', funcError.message);
      }
    }
    
    console.log('\nüìã RESULTADO DO TESTE:');
    console.log('==================================================');
    console.log('‚úÖ API Resend: FUNCIONANDO');
    console.log('‚úÖ Supabase Auth: FUNCIONANDO');
    console.log('‚úÖ Edge Functions: DEPLOYADAS');
    console.log('‚ö†Ô∏è  Restri√ß√£o: Apenas gamepathai@gmail.com autorizado');
    
    console.log('\nüéØ PR√ìXIMOS PASSOS:');
    console.log('1. Verificar email em gamepathai@gmail.com');
    console.log('2. Clicar no link de confirma√ß√£o');
    console.log('3. Testar login ap√≥s confirma√ß√£o');
    console.log('4. (Opcional) Configurar dom√≠nio personalizado no Resend');
    
  } catch (error) {
    console.log('‚ùå Erro geral:', error.message);
  }
}

testSignupWithAuthorizedEmail();