import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY
);

async function diagnosticarSMTP() {
  console.log('üîç DIAGN√ìSTICO DE CONFIGURA√á√ÉO SMTP');
  console.log('=' .repeat(50));
  
  try {
    // Verificar vari√°veis de ambiente
    console.log('1Ô∏è‚É£ Verificando vari√°veis de ambiente...');
    console.log(`‚úÖ SUPABASE_URL: ${process.env.VITE_SUPABASE_URL ? 'Configurada' : '‚ùå N√£o encontrada'}`);
    console.log(`‚úÖ SUPABASE_ANON_KEY: ${process.env.VITE_SUPABASE_ANON_KEY ? 'Configurada' : '‚ùå N√£o encontrada'}`);
    console.log(`‚úÖ RESEND_API_KEY: ${process.env.RESEND_API_KEY ? 'Configurada' : '‚ùå N√£o encontrada'}`);
    
    // Testar conex√£o com Supabase
    console.log('\n2Ô∏è‚É£ Testando conex√£o com Supabase...');
    const { data: testData, error: testError } = await supabase
      .from('user_profiles')
      .select('count')
      .limit(1);
    
    if (testError) {
      console.log('‚ùå Erro na conex√£o:', testError.message);
    } else {
      console.log('‚úÖ Conex√£o com Supabase funcionando');
    }
    
    // Verificar configura√ß√µes de autentica√ß√£o
    console.log('\n3Ô∏è‚É£ Verificando configura√ß√µes de Auth...');
    
    // Tentar um cadastro simples para ver o erro espec√≠fico
    console.log('\n4Ô∏è‚É£ Testando cadastro para capturar erro espec√≠fico...');
    const emailTeste = `diagnostico-${Date.now()}@teste.com`;
    
    const { data, error } = await supabase.auth.signUp({
      email: emailTeste,
      password: 'Teste123!@#'
    });
    
    if (error) {
      console.log('‚ùå Erro detalhado:', error);
      console.log('üìã Mensagem:', error.message);
      console.log('üîç Status:', error.status);
      
      if (error.message.includes('confirmation email')) {
        console.log('\nüéØ PROBLEMA IDENTIFICADO: Erro no envio de email');
        console.log('\nüîß POSS√çVEIS CAUSAS:');
        console.log('1. SMTP n√£o configurado corretamente no Supabase');
        console.log('2. Credenciais do Resend incorretas');
        console.log('3. Dom√≠nio n√£o verificado no Resend');
        console.log('4. Rate limit do Resend atingido');
        
        console.log('\n‚úÖ SOLU√á√ïES:');
        console.log('1. Verificar configura√ß√£o SMTP no Supabase:');
        console.log('   - Host: smtp.resend.com');
        console.log('   - Port: 465');
        console.log('   - Username: resend');
        console.log(`   - Password: ${process.env.RESEND_API_KEY}`);
        console.log('   - Sender: noreply@ncmanalyzer.com.br');
        
        console.log('\n2. Verificar no Dashboard do Supabase:');
        console.log('   - Authentication > Settings > SMTP Settings');
        console.log('   - Confirmar se "Enable custom SMTP" est√° marcado');
        console.log('   - Testar configura√ß√£o com "Send test email"');
        
        console.log('\n3. Verificar logs:');
        console.log('   - Authentication > Logs no Supabase');
        console.log('   - Procurar por erros de SMTP');
      }
    } else {
      console.log('‚úÖ Cadastro funcionou! Verificar se email foi enviado.');
      console.log('üë§ Usu√°rio criado:', data.user?.email);
    }
    
    console.log('\nüìã CHECKLIST DE VERIFICA√á√ÉO:');
    console.log('‚ñ° SMTP habilitado no Supabase');
    console.log('‚ñ° Credenciais corretas (host, port, username, password)');
    console.log('‚ñ° Email remetente configurado');
    console.log('‚ñ° Dom√≠nio verificado no Resend');
    console.log('‚ñ° API Key do Resend v√°lida');
    console.log('‚ñ° Templates de email configurados');
    
    console.log('\nüîó LINKS √öTEIS:');
    console.log('- Dashboard Supabase: https://supabase.com/dashboard');
    console.log('- Dashboard Resend: https://resend.com/dashboard');
    console.log('- Documenta√ß√£o SMTP: https://supabase.com/docs/guides/auth/auth-smtp');
    
  } catch (error) {
    console.error('‚ùå Erro no diagn√≥stico:', error.message);
    console.error('Stack:', error.stack);
  }
}

// Executar diagn√≥stico
diagnosticarSMTP();