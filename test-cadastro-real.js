import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY
);

async function testCadastroReal() {
  console.log('üß™ TESTE DE CADASTRO REAL COM SMTP CONFIGURADO');
  console.log('=' .repeat(60));
  
  try {
    // Email de teste √∫nico
    const emailTeste = `teste-${Date.now()}@gmail.com`;
    const senhaTeste = 'MinhaSenh@123';
    
    console.log(`üìß Testando cadastro com: ${emailTeste}`);
    
    // Tentar cadastrar usu√°rio
    console.log('\n1Ô∏è‚É£ Realizando cadastro...');
    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email: emailTeste,
      password: senhaTeste,
      options: {
        data: {
          subscription_status: 'pending_email'
        }
      }
    });
    
    if (signUpError) {
      console.error('‚ùå Erro no cadastro:', signUpError.message);
      return;
    }
    
    console.log('‚úÖ Cadastro realizado com sucesso!');
    console.log(`üë§ User ID: ${signUpData.user?.id}`);
    console.log(`üìß Email: ${signUpData.user?.email}`);
    console.log(`‚úâÔ∏è Email confirmado: ${signUpData.user?.email_confirmed_at ? 'Sim' : 'N√£o'}`);
    
    // Verificar se o usu√°rio foi criado na tabela user_profiles
    console.log('\n2Ô∏è‚É£ Verificando perfil do usu√°rio...');
    const { data: profileData, error: profileError } = await supabase
      .from('user_profiles')
      .select('*')
      .eq('id', signUpData.user.id)
      .single();
    
    if (profileError) {
      console.log('‚ö†Ô∏è Perfil n√£o encontrado (pode ser normal se o trigger n√£o executou ainda)');
      console.log('Erro:', profileError.message);
    } else {
      console.log('‚úÖ Perfil encontrado:');
      console.log(`   - ID: ${profileData.id}`);
      console.log(`   - Email: ${profileData.email}`);
      console.log(`   - Status: ${profileData.subscription_status}`);
      console.log(`   - Stripe Customer: ${profileData.stripe_customer_id || 'N√£o criado'}`);
    }
    
    // Verificar logs de email no Supabase
    console.log('\n3Ô∏è‚É£ Verificando envio de email...');
    console.log('üìã Para verificar se o email foi enviado:');
    console.log('   1. Acesse o Dashboard do Supabase');
    console.log('   2. V√° em Authentication > Logs');
    console.log('   3. Procure por logs de SMTP/email');
    console.log('   4. Verifique sua caixa de entrada (e spam)');
    
    // Tentar fazer login (deve falhar pois email n√£o foi confirmado)
    console.log('\n4Ô∏è‚É£ Testando login sem confirma√ß√£o de email...');
    const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
      email: emailTeste,
      password: senhaTeste
    });
    
    if (loginError) {
      if (loginError.message.includes('Email not confirmed')) {
        console.log('‚úÖ Comportamento correto: Login bloqueado at√© confirmar email');
      } else {
        console.log('‚ö†Ô∏è Erro inesperado no login:', loginError.message);
      }
    } else {
      console.log('‚ö†Ô∏è Login permitido sem confirma√ß√£o (verificar configura√ß√£o)');
    }
    
    console.log('\nüéØ RESULTADOS DO TESTE:');
    console.log('‚úÖ Cadastro funcionando');
    console.log('‚úÖ Estados de usu√°rio implementados');
    console.log('‚úÖ Valida√ß√£o de email ativa');
    console.log('üìß Email de confirma√ß√£o deve ter sido enviado');
    
    console.log('\nüìã PR√ìXIMOS PASSOS:');
    console.log('1. Verificar se o email chegou na caixa de entrada');
    console.log('2. Clicar no link de confirma√ß√£o');
    console.log('3. Testar login ap√≥s confirma√ß√£o');
    console.log('4. Verificar redirecionamento para pricing');
    
    console.log('\nüîç TROUBLESHOOTING:');
    console.log('Se o email n√£o chegou:');
    console.log('- Verificar pasta de spam');
    console.log('- Conferir logs do Supabase');
    console.log('- Verificar configura√ß√£o SMTP');
    console.log('- Testar com outro provedor de email');
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
    console.error('Stack:', error.stack);
  }
}

// Executar teste
testCadastroReal();