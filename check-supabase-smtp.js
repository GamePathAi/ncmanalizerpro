// Script para verificar configura√ß√£o SMTP no Supabase
import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

// Carregar vari√°veis de ambiente
dotenv.config()

const supabaseUrl = process.env.VITE_SUPABASE_URL
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas')
  console.log('Verifique se VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY est√£o no .env')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function checkSMTPConfiguration() {
  console.log('üîç Verificando configura√ß√£o SMTP do Supabase...')
  console.log('üìç URL do projeto:', supabaseUrl)
  
  try {
    // Tentar fazer um cadastro de teste para verificar o erro
    const testEmail = `teste-smtp-${Date.now()}@exemplo.com`
    console.log('\nüìß Testando cadastro com email:', testEmail)
    
    const { data, error } = await supabase.auth.signUp({
      email: testEmail,
      password: 'TesteSmtp123!',
      options: {
        emailRedirectTo: 'http://localhost:5173/email-confirmation'
      }
    })
    
    if (error) {
      console.log('\n‚ùå Erro no cadastro:', error.message)
      console.log('üìã Detalhes do erro:', JSON.stringify(error, null, 2))
      
      // Analisar o tipo de erro
      if (error.message.includes('Error sending confirmation email')) {
        console.log('\nüö® PROBLEMA IDENTIFICADO: Configura√ß√£o de SMTP')
        console.log('\nüìù SOLU√á√ïES POSS√çVEIS:')
        console.log('\n1Ô∏è‚É£ CONFIGURAR SMTP NO DASHBOARD:')
        console.log('   ‚Ä¢ Acesse: https://supabase.com/dashboard/project/fsntzljufghutoyqxokm')
        console.log('   ‚Ä¢ V√° em Authentication > Settings')
        console.log('   ‚Ä¢ Role at√© "SMTP Settings"')
        console.log('   ‚Ä¢ Configure:')
        console.log('     - Enable custom SMTP: ‚úÖ')
        console.log('     - Host: smtp.resend.com')
        console.log('     - Port: 587')
        console.log('     - Username: resend')
        console.log('     - Password: re_JLRPpf2z_NRDkD1X5LwrggsUJeE4uHN4Y')
        console.log('     - Sender name: NCM Analyzer Pro')
        console.log('     - Sender email: noreply@ncmanalyzerpro.com')
        
        console.log('\n2Ô∏è‚É£ ALTERNATIVA R√ÅPIDA (DESENVOLVIMENTO):')
        console.log('   ‚Ä¢ Desabilite "Enable email confirmations"')
        console.log('   ‚Ä¢ Habilite "Enable automatic confirmation"')
        
        console.log('\n3Ô∏è‚É£ VERIFICAR API KEY DO RESEND:')
        console.log('   ‚Ä¢ Confirme se a API key est√° ativa no Resend')
        console.log('   ‚Ä¢ Verifique se o dom√≠nio est√° verificado')
      }
      
      return false
    }
    
    if (data.user && !data.user.email_confirmed_at) {
      console.log('\n‚úÖ Cadastro realizado com sucesso!')
      console.log('üìß Email de confirma√ß√£o deve ter sido enviado')
      console.log('üë§ Usu√°rio criado:', data.user.email)
      return true
    }
    
    if (data.user && data.user.email_confirmed_at) {
      console.log('\n‚úÖ Cadastro realizado e email confirmado automaticamente!')
      console.log('üë§ Usu√°rio:', data.user.email)
      return true
    }
    
  } catch (error) {
    console.error('\nüí• Erro inesperado:', error.message)
    return false
  }
}

async function checkResendConfiguration() {
  console.log('\nüîß Verificando configura√ß√£o do Resend...')
  
  // Verificar se existe arquivo de configura√ß√£o
  try {
    const fs = await import('fs')
    const path = await import('path')
    
    const configFile = path.join(process.cwd(), 'CONFIGURACAO_EMAIL_RESEND.md')
    if (fs.existsSync(configFile)) {
      console.log('‚úÖ Arquivo de configura√ß√£o do Resend encontrado')
    } else {
      console.log('‚ö†Ô∏è Arquivo de configura√ß√£o do Resend n√£o encontrado')
    }
    
    // Verificar vari√°veis de ambiente relacionadas ao Resend
    const resendKey = process.env.RESEND_API_KEY
    if (resendKey) {
      console.log('‚úÖ RESEND_API_KEY encontrada no .env')
      console.log('üîë Key:', resendKey.substring(0, 10) + '...')
    } else {
      console.log('‚ö†Ô∏è RESEND_API_KEY n√£o encontrada no .env')
    }
    
  } catch (error) {
    console.log('‚ö†Ô∏è N√£o foi poss√≠vel verificar arquivos de configura√ß√£o')
  }
}

async function main() {
  console.log('üöÄ Diagn√≥stico de Configura√ß√£o SMTP - NCM Pro')
  console.log('=' .repeat(50))
  
  await checkResendConfiguration()
  await checkSMTPConfiguration()
  
  console.log('\n' + '='.repeat(50))
  console.log('‚úÖ Diagn√≥stico conclu√≠do!')
  console.log('\nüí° Pr√≥ximo passo: Configure o SMTP no Supabase Dashboard')
  console.log('üìñ Siga as instru√ß√µes em CONFIGURACAO_EMAIL_RESEND.md')
}

// Executar diagn√≥stico
main().catch(console.error)